apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", '"https://api.mercadolibre.com/"')
        }
        release {
            buildConfigField("String", "BASE_URL", "https://api.mercadolibre.com/")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Koin Implementation --------------------------------------------------------
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    implementation "org.koin:koin-android-ext:$koin_version"
    // Koin Implementation --------------------------------------------------------

    // Retrofit Implementation ----------------------------------------------------
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggin_interceptor_version"
    // Retrofit Implementation ----------------------------------------------------

    // Testing ---------------------------------------------------------
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:${mockito_version}"
    testImplementation "org.mockito:mockito-inline:${mockito_version}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}"
    // Power mock
    testImplementation "org.powermock:powermock:${powermock_version}"
    testImplementation "org.powermock:powermock-module-junit4:${powermock_module_api_version}"
    testImplementation "org.powermock:powermock-api-mockito2:${powermock_module_api_version}"
    testImplementation "org.powermock:powermock-module-junit4:${powermock_module_api_version}"
    androidTestImplementation "androidx.test:core:$test_version"
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "androidx.test:rules:$junit_rules_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "android.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "android.arch.core:core-testing:2.1.0"
    // Testing ---------------------------------------------------------

    implementation project(path: ':domain')
}